#output: Hello world

public variant Optional<T> {
    Present(T),
    Empty;

    public ifPresent(consumer as function(value as T) as void) as void {
        if(this.isPresent) {
            consumer(this.expect());
        }
    }

    public get isPresent as bool => match(this) {
        Present(value) => true,
        Empty => false
    };

    public expect() as T {
        return match this {
            Present(value) => value,
            Empty() => panic('Expect called on empty value')
        };
    }
}

var opt as Optional<string> = Present('Hello world');
opt.ifPresent((value) => println(value));
