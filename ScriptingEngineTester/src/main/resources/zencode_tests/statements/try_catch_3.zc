#disabled: Not part of the refactor
#disabled: The parser does not yet support "AS" in Catch clauses

#output: TestException1
#output: test

import testsupport.TestException;

public class TestException1 : TestException {
    this(message: string) => super(message);
}

public class TestException2 : TestException {
    this(message: string) => super(message);
}

try {
	if true {
		throw new TestException1("test");
	} else {
		throw new TestException2("test");
	}
} catch ex as TestException1 {
	println(typeof(ex));
	println(ex.message);
} catch ex as TestException2 {
	println(typeof(ex));
	println(ex.message);
}
